[{"D:\\Java_Projects\\mymoodmate\\frontend-react\\login-system-frontend\\src\\index.js":"1","D:\\Java_Projects\\mymoodmate\\frontend-react\\login-system-frontend\\src\\App.js":"2","D:\\Java_Projects\\mymoodmate\\frontend-react\\login-system-frontend\\src\\component\\HomePage.js":"3","D:\\Java_Projects\\mymoodmate\\frontend-react\\login-system-frontend\\src\\component\\RegistrationPage.js":"4","D:\\Java_Projects\\mymoodmate\\frontend-react\\login-system-frontend\\src\\component\\LoginPage.js":"5","D:\\Java_Projects\\mymoodmate\\frontend-react\\login-system-frontend\\src\\component\\Dashboard.js":"6","D:\\Java_Projects\\mymoodmate\\frontend-react\\login-system-frontend\\src\\api\\journalApi.js":"7","D:\\Java_Projects\\mymoodmate\\frontend-react\\login-system-frontend\\src\\component\\FlipbookComponent.js":"8"},{"size":226,"mtime":1756193703780,"results":"9","hashOfConfig":"10"},{"size":1325,"mtime":1756044414538,"results":"11","hashOfConfig":"10"},{"size":3105,"mtime":1756194675802,"results":"12","hashOfConfig":"10"},{"size":4038,"mtime":1756025632448,"results":"13","hashOfConfig":"10"},{"size":2086,"mtime":1756043622608,"results":"14","hashOfConfig":"10"},{"size":2183,"mtime":1756025878451,"results":"15","hashOfConfig":"10"},{"size":495,"mtime":1756043618271,"results":"16","hashOfConfig":"10"},{"size":3052,"mtime":1756194703428,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c6xb30",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"D:\\Java_Projects\\mymoodmate\\frontend-react\\login-system-frontend\\src\\index.js",[],[],"D:\\Java_Projects\\mymoodmate\\frontend-react\\login-system-frontend\\src\\App.js",["44","45"],[],"import React, { useState } from 'react';\nimport { BrowserRouter as Router, Link, Routes, Route, useLocation, Navigate } from 'react-router-dom';\nimport './App.css';\n\nimport LoginPage from './component/LoginPage';\nimport HomePage from './component/HomePage';\nimport RegistrationPage from './component/RegistrationPage';\nimport Dashboard from './component/Dashboard';\n\nfunction App() {\n  const [user, setUser] = useState('');\n\n  const handleLogin = (userData) => {\n    setUser(userData);\n  };\n\n  const handleLogout = () => {\n    setUser('');\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          <Route path=\"/\" element={<Dashboard />} />\n          <Route\n            path=\"/login\"\n            element={\n              !user ? (\n                <LoginPage onLogin={handleLogin} />\n              ) : (\n                <Navigate to=\"/home\" replace />\n              )\n            }\n          />\n          <Route path=\"/register\" element={<RegistrationPage />} />\n          <Route\n            path=\"/home\"\n            element={\n              user ? (\n                <HomePage user={user} onLogout={handleLogout} />\n              ) : (\n                <Navigate to=\"/login\" replace />\n              )\n            }\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","D:\\Java_Projects\\mymoodmate\\frontend-react\\login-system-frontend\\src\\component\\HomePage.js",[],[],"D:\\Java_Projects\\mymoodmate\\frontend-react\\login-system-frontend\\src\\component\\RegistrationPage.js",[],[],"D:\\Java_Projects\\mymoodmate\\frontend-react\\login-system-frontend\\src\\component\\LoginPage.js",[],[],"D:\\Java_Projects\\mymoodmate\\frontend-react\\login-system-frontend\\src\\component\\Dashboard.js",[],[],"D:\\Java_Projects\\mymoodmate\\frontend-react\\login-system-frontend\\src\\api\\journalApi.js",[],[],"D:\\Java_Projects\\mymoodmate\\frontend-react\\login-system-frontend\\src\\component\\FlipbookComponent.js",["46"],[],"// FlipbookComponent.jsx\r\nimport React, { useRef, useState } from \"react\";\r\nimport HTMLFlipBook from \"react-pageflip\";\r\nimport \"./design/FlipbookComponent.css\";\r\n\r\nconst FlipbookComponent = ({ entries }) => {\r\n  const flipBookRef = useRef(null);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  if (!entries || entries.length === 0) {\r\n    return (\r\n      <div className=\"no-entries\">\r\n        <p>No journal entries yet. Start writing to see them here!</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flipbook-container\">\r\n      <HTMLFlipBook\r\n  width={400}\r\n  height={600}\r\n  size=\"stretch\"        // allows book to resize with screen\r\n  minWidth={315}\r\n  maxWidth={1000}\r\n  minHeight={400}\r\n  maxHeight={1500}\r\n  maxShadowOpacity={0.5}\r\n  showCover={true}      // cover page on the left, next page on the right\r\n  drawShadow={true}\r\n  usePortrait={false}   // <--- force double-page view (book-like)\r\n  startPage={0}         // always starts at cover\r\n>\r\n        {/* Cover Page */}\r\n        <div className=\"page page-cover\">\r\n          <div className=\"page-content cover\">\r\n            <h1 className=\"journal-title\">üìñ My Journal</h1>\r\n            <p className=\"journal-subtitle\">Personal Reflections</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Journal Pages */}\r\n        {entries.map(([date, dateEntries]) => (\r\n          <div className=\"page journal-page\" key={date}>\r\n            <div className=\"page-content\">\r\n              <h2 className=\"entry-date\">{date}</h2>\r\n              <div className=\"entries-list\">\r\n                {dateEntries.map((entry) => (\r\n                  <div className=\"journal-entry\" key={entry.id}>\r\n                    <p className=\"entry-content\">{entry.content}</p>\r\n                    <p className=\"entry-time\">\r\n                      {new Date(entry.createdAt).toLocaleTimeString([], {\r\n                        hour: \"2-digit\",\r\n                        minute: \"2-digit\",\r\n                      })}\r\n                    </p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n        {/* Back Cover */}\r\n        <div className=\"page page-cover page-back\">\r\n          <div className=\"page-content cover\">\r\n            <p className=\"journal-subtitle\">‚ú® The End</p>\r\n            <p>Keep writing your story...</p>\r\n          </div>\r\n        </div>\r\n      </HTMLFlipBook>\r\n\r\n      {/* Navigation Controls */}\r\n      <div className=\"flipbook-controls\">\r\n        <button\r\n          onClick={() => flipBookRef.current.pageFlip().flipPrev()}\r\n          className=\"control-btn prev-btn\"\r\n        >\r\n          ‚Üê Previous\r\n        </button>\r\n        <span className=\"page-indicator\">\r\n          Page {currentPage + 1} of {entries.length + 2}\r\n        </span>\r\n        <button\r\n          onClick={() => flipBookRef.current.pageFlip().flipNext()}\r\n          className=\"control-btn next-btn\"\r\n        >\r\n          Next ‚Üí\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlipbookComponent;\r\n",{"ruleId":"47","severity":1,"message":"48","line":2,"column":35,"nodeType":"49","messageId":"50","endLine":2,"endColumn":39},{"ruleId":"47","severity":1,"message":"51","line":2,"column":56,"nodeType":"49","messageId":"50","endLine":2,"endColumn":67},{"ruleId":"47","severity":1,"message":"52","line":8,"column":23,"nodeType":"49","messageId":"50","endLine":8,"endColumn":37},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'setCurrentPage' is assigned a value but never used."]